package main

import "fmt"

//Go包级别变量的初始化依赖规则：
// 1、在Go包中，包级别变量的初始化按照变量声明的先后顺序进行。
// 2、如果某个变量（如变量a）的初始化表达式中直接或间接依赖其他变量（如变量b），那么变量a的初始化顺序排在变量b后面。
// 3、未初始化的且不含有对应初始化表达式或初始化表达式不依赖任何未初始化变量的变量，我们称之为“ready for initialization”变量。
// 4、包级别变量的初始化是逐步进行的，每一步就是按照变量声明顺序找到下一个“ready for initialization”变量并对其进行初始化的过程。
//	  反复重复这一步骤，直到没有“ready for initialization”变量为止。
// 5、位于同一包内但不同文件中的变量的声明顺序依赖编译器处理文件的顺序：先处理的文件中的变量的声明顺序先于后处理的文件中的所有变量。

// 不同的包变量初始化顺序会导致变量值不同
var (
	a = c + b
	b = f()
	c = f()
	d = 3
)

func f() int {
	d++
	return d
}

// Go语言表达式的求值顺序问题
func main() {

	fmt.Println(a, b, c, d)
}
